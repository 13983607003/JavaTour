<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.crm.dao.ICustomerVisitDao">
	<select id="findCustomerVisit" resultType="com.crm.model.CustomerVisit">
		select id, name, pycode, code, grade, source, c_type as cType, m_type as mType, region_id as regionId, region_name as regionName, province, city, fax, postcode, tel1, tel2, mobile, email, web, address, dealing, scale, register_money as registerMoney, kind, trade, legal_person as legalPerson, bank, account, tax_code as taxCode, buy_flag as buyFlag, creater, create_time as createTime, updater, update_time as updateTime, status, remark, next_touch_date as nextTouchDate, next_service_date as nextServiceDate, first_touch_date as firstTouchDate, last_touch_date as lastTouchDate, next_touch_aim as nextTouchAim, dispense_person as dispensePerson, dispense_date as dispenseDate, apply_user_id as applyUserId, s_person as sPerson, s_reason as sReason, s_date as sDate, plan_callback_reason as planCallbackReason, plan_callback_date as planCallbackDate, cur_link_flag as curLinkFlag, cur_buy_flag as curBuyFlag, freeze_leave_day as freezeLeaveDay, custom1, custom2, custom3, custom4, choice1, choice2, choice3, choice4, time1, time2, share_flag as shareFlag, share_ids as shareIds, quality, owner_usr as ownerUsr 
		from c_company
		limit #{from}, #{pageSize}
	</select>
	<select id="countCustomerVisit" resultType="Integer">
		select count(id)
		from c_company
	</select>
	<select id="findAllCustomerVisit" resultType="com.crm.model.CustomerVisit">
		select id, name, pycode, code, grade, source, c_type as cType, m_type as mType, region_id as regionId, region_name as regionName, province, city, fax, postcode, tel1, tel2, mobile, email, web, address, dealing, scale, register_money as registerMoney, kind, trade, legal_person as legalPerson, bank, account, tax_code as taxCode, buy_flag as buyFlag, creater, create_time as createTime, updater, update_time as updateTime, status, remark, next_touch_date as nextTouchDate, next_service_date as nextServiceDate, first_touch_date as firstTouchDate, last_touch_date as lastTouchDate, next_touch_aim as nextTouchAim, dispense_person as dispensePerson, dispense_date as dispenseDate, apply_user_id as applyUserId, s_person as sPerson, s_reason as sReason, s_date as sDate, plan_callback_reason as planCallbackReason, plan_callback_date as planCallbackDate, cur_link_flag as curLinkFlag, cur_buy_flag as curBuyFlag, freeze_leave_day as freezeLeaveDay, custom1, custom2, custom3, custom4, choice1, choice2, choice3, choice4, time1, time2, share_flag as shareFlag, share_ids as shareIds, quality, owner_usr as ownerUsr 
		from c_company
	</select>
	<insert id="addProductType">
		insert into c_company(id, name, pycode, code, grade, source, c_type, m_type, region_id, region_name, province, city, fax, postcode, tel1, tel2, mobile, email, web, address, dealing, scale, register_money, kind, trade, legal_person, bank, account, tax_code, buy_flag, creater, create_time, updater, update_time, status, remark, next_touch_date, next_service_date, first_touch_date, last_touch_date, next_touch_aim, dispense_person, dispense_date, apply_user_id, s_person, s_reason, s_date, plan_callback_reason, plan_callback_date, cur_link_flag, cur_buy_flag, freeze_leave_day, custom1, custom2, custom3, custom4, choice1, choice2, choice3,choice4, time1, time2, share_flag, share_ids, quality, owner_usr)
		values(#{customerVisit.id}, #{customerVisit.name}, #{customerVisit.pycode}, #{customerVisit.code}, #{customerVisit.grade}, #{customerVisit.source}, #{customerVisit.cType}, #{customerVisit.mType}, #{customerVisit.regionId}, #{customerVisit.regionName}, #{customerVisit.province}, #{customerVisit.city}, #{customerVisit.fax}, #{customerVisit.postcode}, #{customerVisit.tel1}, #{customerVisit.tel2}, #{customerVisit.mobile}, #{customerVisit.email}, #{customerVisit.web}, #{customerVisit.address}, #{customerVisit.dealing}, #{customerVisit.scale}, #{customerVisit.registerMoney}, #{customerVisit.kind}, #{customerVisit.trade}, #{customerVisit.legalPerson}, #{customerVisit.bank}, #{customerVisit.account}, #{customerVisit.taxCode}, #{customerVisit.buyFlag}, #{customerVisit.creater}, #{customerVisit.createTime}, #{customerVisit.updater}, #{customerVisit.updateTime}, #{customerVisit.status}, #{customerVisit.remark}, #{customerVisit.nextTouchDate}, #{customerVisit.nextServiceDate}, #{customerVisit.firstTouchDate}, #{customerVisit.lastTouchDate}, #{customerVisit.nextTouchAim}, #{customerVisit.dispensePerson}, #{customerVisit.dispenseDate}, #{customerVisit.applyUserId}, #{customerVisit.sPerson}, #{customerVisit.sReason}, #{customerVisit.sDate}, #{customerVisit.planCallbackReason}, #{customerVisit.planCallbackDate}, #{customerVisit.curLinkFlag}, #{customerVisit.curBuyFlag}, #{customerVisit.freezeLeaveDay}, #{customerVisit.custom1}, #{customerVisit.custom2}, #{customerVisit.custom3}, #{customerVisit.custom4}, #{customerVisit.choice1}, #{customerVisit.choice2}, #{customerVisit.choice3}, #{customerVisit.choice4}, #{customerVisit.time1}, #{customerVisit.time2}, #{customerVisit.shareFlag}, #{customerVisit.shareIds}, #{customerVisit.quality}, #{customerVisit.ownerUsr})
	</insert>
	<delete id="deleteCustomerVisitById">
		delete from c_company 
		where id=#{id}
	</delete>
</mapper>
